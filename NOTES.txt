Folder structure

- config
    - index.js - Connects the app.js with the middlewares

- controllers
    - whatevermodelname.controller.js - Has the express petitions (CRUD) for the models

- db
    - index.js - Connects to the database (MongoDB, SQL, etc...)

- error-handling
    - index.js - Handles the errors of the overall app

- middleware
    - cors.middleware.js - Handles CORS (Cross-Origin Resource Sharing) to control the origin of the requests
    - jwt.middleware.js - Handles JWT (json web token) for authentication

- models
    - whatevermodelname.model.js - Has the schema for the models

- routes
    - index.routes.js - Connects the controllers with the routes and the jwt.middleware.js
    - auth.routes.js - Handles the petitions for authentication and authorization (login, signup, verify, logout)

- server.js - Starts the server (launches the app)

- app.js - Connects the routes with the server, configures the express server

Current models relationships

- User to Game (Favorites): One-to-many relationship where users can favorite multiple games.
    - Implemented via the favourites array in the User model which stores Game IDs
    - Complemented by a favoriteCount counter in the Game model

- User to PlayAnalytics: One-to-many relationship where a user generates multiple analytics entries.
    - Each PlayAnalytics entry is linked to both a user and a game
    - This relationship tracks play history, scores, and game interactions

- Game to PlayAnalytics: One-to-many relationship where each game has multiple analytics entries.
    - Used for tracking game popularity and engagement metrics


- User to Rating: One-to-many relationship where users can rate multiple games.
    - New Rating model allows users to provide scores and commentss for games

- Game to Rating: One-to-many relationship where games receive multiple ratings.
    - Aggregate rating data is stored in the Game model for quick access

- Game to Leaderboard: One-to-many relationship where each game has multiple leaderboards.
    - Different timeframes (daily, weekly, monthly, all-time)

- User to Leaderboard: Many-to-many relationship through leaderboard entries.
    - Users appear on leaderboards when they achieve high scores

USERS DE PRUEBA
- Postman signup
{
  "email": "samuel@example.com",
  "password": "Strong1!Password",
  "fullName": "Samuel",
  "username": "Samu",
  "ageRange": "25-34"
}

- Postman login
{
  "email": "celina@email.com",
  "password": "Cmb1.",
}

- Postman create user
{
  "fullName": "Celina",
  "username": "Celi",
  "email": "celina@email.com",
  "password": "Cmb1.", 
  "role": "admin",
  "ageRange": "25-34",
  "favourites": []
}

- Classroom
    - Samuel: https://samuglez.github.io/project-game/ - Done
    - Fernando: https://fernando-pucha.github.io/3S3-game/ - Done
    - Celina: https://mbceli.github.io/Projetc1-TheGame/ - Done
    - Kevin: https://kevinjg994.github.io/Whack-a-Diglett/ - Done
    - Kelvin: https://kelvinf87.github.io/gamekpum/ - Done
    - Fenyx: https://fenyyx.github.io/Memojojory/ - 
    - Patricia: https://patricia-graciagutierrez.github.io/project_game/ - Done
    - Roberto: https://robertfm89.github.io/NOT-another-brick-in-the-wall/ - Done
    - Sasha: https://sashaknw.github.io/game-try1/ - Done
    - Aythami: https://aythp.github.io/simon-says/ - Done
    - Omar: https://kyomar97.github.io/Project-videogame-arka/ - Done
    - Nestor: https://nestorsdelgado.github.io/minigame1/ - Done
    - Gara: https://garaluzardo.github.io/backup-proyecto-juego-js/ - Done
    - Kilian: https://kilianhc.github.io/project-1-The-Game/ - Done
    - Julia: https://zuma-code.github.io/memory1/ - Done
    - Monica: https://monica-r.github.io/fillit
    - Airam: https://airam-plasencia.github.io/Ballerina-game/ - Done
    - Johana: https://jojocg.github.io/Sen-Beauty-Salon-Game/ - Done

